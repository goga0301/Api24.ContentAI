import os
import subprocess
import tempfile
from config import logger


def convert_pdf_to_images(pdf_path: str) -> list[str]:
    output_dir = os.path.join(tempfile.gettempdir(), "ocr_pages")
    os.makedirs(output_dir, exist_ok=True)
    output_prefix = os.path.join(output_dir, "page")

    if not os.path.exists(pdf_path):
        raise RuntimeError(f"PDF does not exist: {pdf_path}")
    if os.path.getsize(pdf_path) == 0:
        raise RuntimeError(f"PDF is empty: {pdf_path}")
    with open(pdf_path, "rb") as f:
        if f.read(5) != b"%PDF-":
            raise RuntimeError("Invalid PDF file")

    pdftoppm_cmd = "pdftoppm"  # assume it's in PATH on both platforms

    cmd = [pdftoppm_cmd, pdf_path, output_prefix, "-png"]
    try:
        logger.debug(f"Running: {' '.join(cmd)}")
        subprocess.run(cmd, check=True, capture_output=True, text=True)
    except subprocess.CalledProcessError as e:
        logger.error(f"pdftoppm failed: {e.stderr}")
        raise RuntimeError(f"pdftoppm error: {e.stderr}")

    images = sorted(
        os.path.join(output_dir, f)
        for f in os.listdir(output_dir)
        if f.startswith("page") and f.endswith(".png")
    )
    if not images:
        raise RuntimeError("No images generated by pdftoppm")
    return images